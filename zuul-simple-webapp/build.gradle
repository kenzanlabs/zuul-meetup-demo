plugins {
    id 'net.saliman.cobertura' version '2.2.7'
    id "com.bmuschko.tomcat" version "2.2.2"
    id 'codenarc'
    id 'findbugs'
    id 'checkstyle'
}
apply plugin: 'war'
apply plugin: 'jetty'
apply plugin: 'cobertura'
apply plugin: 'groovy'

repositories {
    jcenter {
        url "http://jcenter.bintray.com/"
    }
}

dependencies {
    compile group: 'com.netflix.zuul', name: 'zuul-core', version: '1.2.3'
    compile 'org.codehaus.groovy:groovy-all:2.4.10'

    compile 'org.apache.httpcomponents:httpclient:4.5'
    providedCompile 'javax.servlet:servlet-api:2.5'

    def tomcatVersion = '8.0.23'
    tomcat "org.apache.tomcat.embed:tomcat-embed-core:${tomcatVersion}",
        "org.apache.tomcat.embed:tomcat-embed-logging-juli:${tomcatVersion}",
        "org.apache.tomcat.embed:tomcat-embed-jasper:${tomcatVersion}"

}

//eclipse {
//  classpath {
//        downloadSources = true
//        downloadJavadoc = true
//  }
//}

war {
    webXml = file('src/main/webapp/WEB-INF/web.xml')
    webInf{
        from('src/main/groovy/filters') {
            into('classes')
        }
    }
}

jettyRun.contextPath = '/'

jettyRun.doFirst {
    System.setProperty("zuul.filter.root", "src/main/groovy/filters")
}

cobertura {
    coverageSourceDirs = [sourceSets.main.groovy.srcDirs, sourceSets.main.java.srcDirs]
    coverageFormats = ['xml', 'html']
}

checkstyle {
    toolVersion = '6.7'
    ignoreFailures = true
    showViolations = false
    sourceSets = [sourceSets.main]
    reportsDir = file('build/reports/checkstyle')
}

codenarc {
    configFile = file('config/codenarc/rules.groovy')
    ignoreFailures = true
    sourceSets = [sourceSets.main]
    reportFormat = 'xml'
}

findbugs {
    effort = 'min'
    ignoreFailures = true
    sourceSets = [sourceSets.main]
}

tomcat {
    contextPath = '/'
}

[tomcatRun, tomcatRunWar]*.doFirst {
    System.setProperty("zuul.filter.root", "src/main/groovy/filters")
}
